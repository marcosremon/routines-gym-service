---- Tabla de usuarios
--CREATE TABLE users (
--    user_id BIGSERIAL PRIMARY KEY,
--    dni VARCHAR(255) NOT NULL DEFAULT '',
--    username VARCHAR(255) NOT NULL DEFAULT '',
--    surname VARCHAR(255) DEFAULT '',
--    email VARCHAR(255) NOT NULL DEFAULT '',
--    friend_code VARCHAR(255) NOT NULL DEFAULT '',
--    password BYTEA,
--    role INTEGER NOT NULL DEFAULT 0,
--    role_string VARCHAR(255) NOT NULL DEFAULT '',
--    inscription_date TIMESTAMP NOT NULL DEFAULT '0001-01-01 00:00:00'::timestamp,
--    CONSTRAINT unique_email UNIQUE (email),
--    CONSTRAINT unique_friend_code UNIQUE (friend_code)
--);

---- Tabla de amistades entre usuarios
--CREATE TABLE user_friends (
--    user_friend_id BIGSERIAL PRIMARY KEY,
--    user_id BIGINT NOT NULL,
--    friend_id BIGINT NOT NULL,
--    CONSTRAINT fk_user_friend_user
--        FOREIGN KEY (user_id)
--        REFERENCES users(user_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT fk_user_friend_friends
--        FOREIGN KEY (friend_id)
--        REFERENCES users(user_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT unique_friendship UNIQUE (user_id, friend_id),
--    CONSTRAINT check_not_self_friend CHECK (user_id != friend_id)
--);

---- Tabla de pasos diarios
--CREATE TABLE steps (
--    steps_id BIGSERIAL PRIMARY KEY,
--    user_id BIGINT NOT NULL,
--    date TIMESTAMP NOT NULL DEFAULT '0001-01-01 00:00:00'::timestamp,
--    steps INTEGER NOT NULL DEFAULT 0,
--    daily_steps_goal INTEGER NOT NULL DEFAULT 10000,
--    CONSTRAINT fk_steps_user
--        FOREIGN KEY (user_id)
--        REFERENCES users(user_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT check_steps_positive CHECK (steps >= 0),
--    CONSTRAINT check_goal_positive CHECK (daily_steps_goal > 0)
--);

---- Tabla de rutinas de ejercicio
--CREATE TABLE routines (
--    routine_id BIGSERIAL PRIMARY KEY,
--    routine_name VARCHAR(255) NOT NULL DEFAULT '',
--    routine_description VARCHAR(255) DEFAULT '',
--    user_id BIGINT NOT NULL,
--    CONSTRAINT fk_user_routine_routines
--        FOREIGN KEY (user_id)
--        REFERENCES users(user_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE
--);

---- Tabla de días de entrenamiento (split)
--CREATE TABLE split_days (
--    split_day_id BIGSERIAL PRIMARY KEY,
--    day_name INTEGER NOT NULL,
--    day_name_string VARCHAR(255) NOT NULL,
--    routine_id BIGINT NOT NULL,
--    day_exercises_description TEXT NOT NULL DEFAULT '',
--    CONSTRAINT fk_split_days_routine
--        FOREIGN KEY (routine_id)
--        REFERENCES routines(routine_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT check_day_name_range CHECK (day_name BETWEEN 1 AND 7)
--);

---- Tabla de ejercicios
--CREATE TABLE exercises (
--    exercise_id BIGSERIAL PRIMARY KEY,
--    exercise_name VARCHAR(255) NOT NULL DEFAULT '',
--    routine_id BIGINT NOT NULL,
--    split_day_id BIGINT NOT NULL,
--    CONSTRAINT fk_exercises_routine
--        FOREIGN KEY (routine_id)
--        REFERENCES routines(routine_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT fk_exercises_split_day
--        FOREIGN KEY (split_day_id)
--        REFERENCES split_days(split_day_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE
--);

---- Tabla de progreso de ejercicios
--CREATE TABLE exercise_progress (
--    progress_id BIGSERIAL PRIMARY KEY,
--    exercise_id BIGINT NOT NULL,
--    routine_id BIGINT NOT NULL,
--    day_name VARCHAR(50) NOT NULL DEFAULT '',
--    sets INTEGER NOT NULL,
--    reps INTEGER NOT NULL,
--    weight FLOAT NOT NULL,
--    performed_at TIMESTAMP NOT NULL,
--    CONSTRAINT fk_exercise_progress_exercise
--        FOREIGN KEY (exercise_id)
--        REFERENCES exercises(exercise_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT fk_exercise_progress_routine
--        FOREIGN KEY (routine_id)
--        REFERENCES routines(routine_id)
--        ON DELETE CASCADE
--        ON UPDATE CASCADE,
--    CONSTRAINT check_sets_positive CHECK (sets > 0),
--    CONSTRAINT check_reps_positive CHECK (reps > 0),
--    CONSTRAINT check_weight_non_negative CHECK (weight >= 0)
--);

---- Índices para mejorar el rendimiento
--CREATE INDEX idx_user_friends_user_id ON user_friends(user_id);
--CREATE INDEX idx_user_friends_friend_id ON user_friends(friend_id);
--CREATE INDEX idx_steps_user_id ON steps(user_id);
--CREATE INDEX idx_steps_date ON steps(date);
--CREATE INDEX idx_routines_user_id ON routines(user_id);
--CREATE INDEX idx_split_days_routine_id ON split_days(routine_id);
--CREATE INDEX idx_exercises_routine_id ON exercises(routine_id);
--CREATE INDEX idx_exercises_split_day_id ON exercises(split_day_id);
--CREATE INDEX idx_exercise_progress_exercise_id ON exercise_progress(exercise_id);
--CREATE INDEX idx_exercise_progress_routine_id ON exercise_progress(routine_id);
--CREATE INDEX idx_exercise_progress_performed_at ON exercise_progress(performed_at);